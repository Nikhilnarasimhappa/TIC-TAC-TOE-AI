import random
board = [' ' for _ in range(9)]
def print_board():
    row1 = '| {} | {} | {} |'.format(board[0], board[1], board[2])
    row2 = '| {} | {} | {} |'.format(board[3], board[4], board[5])
    row3 = '| {} | {} | {} |'.format(board[6], board[7], board[8])
    print()
    print(row1)
    print(row2)
    print(row3)
    print()
def has_won(player):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]
    for condition in win_conditions:
        if board[condition[0]] == board[condition[1]] == board[condition[2]] == player:
            return True
    return False
def is_draw():
    return ' ' not in board
def minimax(depth, is_maximizing, alpha, beta):
    if has_won('X'):
        return -10 + depth
    elif has_won('O'):
        return 10 - depth
    elif is_draw():
        return 0

    if is_maximizing:
        best_score = float('-inf')
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'O'
                score = minimax(depth + 1, False, alpha, beta)
                board[i] = ' '
                best_score = max(score, best_score)
                alpha = max(alpha, best_score)
                if beta <= alpha:
                    break
        return best_score
    else:
        best_score = float('inf')
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'X'
                score = minimax(depth + 1, True, alpha, beta)
                board[i] = ' '
                best_score = min(score, best_score)
                beta = min(beta, best_score)
                if beta <= alpha:
                    break
        return best_score
def ai_move():
    best_score = float('-inf')
    best_move = None
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'O'
            score = minimax(0, False, float('-inf'), float('inf'))
            board[i] = ' '
            if score > best_score:
                best_score = score
                best_move = i
    return best_move
def game_loop():
    while True:
        print_board()
        human_move = input("Enter your move (1-9): ")
        if board[int(human_move) - 1] != ' ':
            print("Invalid move, try again.")
            continue
        board[int(human_move) - 1] = 'X'
        if has_won('X'):
            print_board()
            print("You win!")
            break
        elif is_draw():
            print_board()
            print("It's a draw!")
            break
        ai_move_index = ai_move()
        board[ai_move_index] = 'O'
        if has_won('O'):
            print_board()
            print("AI wins!")
            break
game_loop()
